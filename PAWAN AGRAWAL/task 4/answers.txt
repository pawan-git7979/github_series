Task-2

Q) share the link of your github repo you have created.
Ans) https://github.com/pawan-git7979/Todo-list
Q) drop the ans of the following question.
a) and b) how git workflow works and what are different stages of git project.
Ans) Git workflow is a process..comprised of three levels. Working directory (local system) , staging area, github repository.
Git workflow shows us how the changes that had been made in the local copy can be transmitted to our github repo. this can be achieved by the no.of commands.
(1) git init- first of all we have to initialise the git inside the folder, Which upon we want to work.
(2) create a local file inside your directory or folder and make some changes.
Now these changes can be seen only in your local copy not your github repo.
(3) git add <file name> - this will add your local file into the staging area, it means files are ready to commit.
You can see by running git status command which files we have to add in staging area.
(4) now the last step remain, commiting changes.
 Git commit -m "message" - this command will commit or save the changes that have been made by us in the files..and. Will also be reflected in our github repo.
Now our local copy and github repo are exactly the same.

C)is it possible to do a git commit before git add, of u have made any changes explain.why..?
Ans)It is not possible to add git commit before git add.. bcs when we are running the git addd command it means that we are adding the files into the staging area or simply the files that we want to get commited we only out those files into the staging area...and after adding files into staging area we can run command git commit -m "message" to save all the changes that we have made in our local copy.
D) why is git diff use..
Ans)
Git diff is a git command and is used to see what changes we have done in our local copy before and after. After running the git diff command we can see the code which we have added in green colour and code which we have deleted in red colour.
After doing this if u want these changes to be also seen in your github repo you can run the git add command and after that git commit command to save all your changes in your github repo.
E) can we leave a commit message as blank..?
Ans) Yes, of course we can leave the commit message blank...like this---> git commit -m " ".
But we shouldn't do this, bcs if the third person look into your repo he won't we able to understand what commit u have done until u have written the perfect  commit message.



task-3

1) share the link of the  2 PR that u have made.
Master branch--https://github.com/codewayy/github_series/pull/127
Custom branch--https://github.com/codewayy/github_series/pull/128
Drop the ans of the following question.
A) what is meant by the term clone and fork.
Ans) Forking is a concept while cloning is a process.
Forking is just containing a separate copy of the repository from the owner github account to the person who wants to fork it, and there is no command involved in it.
Whereas cloning is done through the command "git clone" and it is the process of receiving all the code files from your github account to the local machine.
B) what are branches in github.
Ans) A branch in github is simply the path in which u move forward and make commits. The default branch name in git is master. As u start making commit , u are given a master branch that points to the last commit u made.
You can also create the custom branch from a root branch (master) and after doing commit u can also merge the custom branch to the root branch.
Is it a good practice to create a custom branch if u are working in a team.
C) what is PR.
Ans) After forking and cloning, and making changes to the file, u want to reflect these changes in the main account from Which u have forked the repo, in that case you make a pull request to the person who is the owner of that repo... saying that what changes u have done.
If that person find your changes interesting in that case he can merge your pull request .
And all the changes that you have made will be reflected in the main repo.
D) can we delete the master branch.. if not why.?
Ans)As the master branch is the root and default branch of our github repo..so if want to delete it we can't delete it directly..we have to first change our default branch, then we can delete master branch.
Steps to delete the master branch--->
1) create a new custom branch.
2) go to settings--> github pages---> branches---> default branch.
3) and change the default branch to the custom branch that u have made previously.
4) delete the main branch.
E) how to delete a branch.
Ans) Deleting branch locally--->
Git will not let u delete the branch you are currently on so u must make sure to checkout a branch that you are NOT deleting.
Command--> git branch -d <branch>.
It will only delete the branch it it has been pushed and merge with the remote branch.
Use "-D" instead if u want to force the branch to be deleted, even if hasn't been pushed or merge yet.
Deleting a branch Remotely---->
Command--> git push  < remote> --delete <branch>
e.g) git push origin --delete <branch_name>. 

